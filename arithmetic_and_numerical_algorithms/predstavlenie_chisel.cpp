/* Дано натуральное число N. 
   Требуется представить его в виде суммы двух натуральных чисел A и B таких, что НОД (наибольший общий делитель) чисел A и B — максимален.
   Идея: по свойству делимости натуральных чисел если A % C == 0 и B % C == 0, то ( A + B ) % C == 0. Нужно максимизировать НОД( A, B ) и минимизировать A. 
   Алгоритм:
   1. Ищем p1 - минимальный простой делитель числа N - в диапазоне [2; sqrt(N)].
   2. Если мы не нашли такой минимальный делитель, то наше число N - простое. Тогда p1 = N.
   3. Получается, что A = N / p1, B = N - N / p1.
*/


#include <bits/stdc++.h>
using namespace std;

int main()
{   
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    unsigned long long N, A;
    
    cin >> N;
    
    if ( !( N & 1 ) )
        {
            A = N / 2;
            cout << A << ' ' << N - A << endl;
        }
    else
        {
            for (int p1 = 3; p1 * p1 < N; p1 += 2)
                if ( !( N % p1 ) )
                    {
                        A = N / 2;
                        cout << A << ' ' << N - A << endl;
                        return 0;
                    }    
            cout << 1 << ' ' << N - 1 << endl;
        }
    
    return 0;
}
